---
name: dibstest
variables:
   - &one one
   - &two 'two (2)'
   - function: &f  [ join, '-', whenever, you, want, *two ]
   - whatever:
      - join
      - '-'
      - [env, WHATEVER]
      - you
      - want
      - *two
   - &f2 [ get_var, whatever ]
   - [set_var, whatever, pippo ]
   - &f3 [ get_var, whatever ]
defaults:
   envile: &common_envile
      FOO: bar
      BAR: baz
packs:
   for_bar:
      run: |
         #!/bin/sh
         env_dir="$PWD"
         exec >&2
         printf '%s\n' "Hello, world! This is bar [$1] [$2]"
         FOO="$(cat "$env_dir/FOO")"
         BAR="$(cat "$env_dir/BAR")"
         BAZ="$(cat "$env_dir/BAZ")"
         GOO="$(cat "$env_dir/GOO")"
         GOG="$(cat "$env_dir/GOG")"
         printf '%s\n' "FOO<$FOO> BAR<$BAR>"
         printf '%s\n' "BAZ<$BAZ>"
         printf '%s\n' "GOO<$GOO>"
         printf '%s\n' "GOG<$GOG>"
   for_foo:
      run: |
         #!/bin/sh
         env_dir="$PWD"
         exec >&2
         printf '%s\n' "Hello, world! In foo, FOO starts as <$FOO>"
         FOO="$(cat "$env_dir/FOO")"
         printf '%s\n' "Hello, world! This is foo and FOO is <$FOO>"
actions:
   bar:
      - from: alpine:latest
      - name: 'bar! bar! bar!'
        pack: for_bar
        envile:
         - *common_envile
         - BAR: baaaz
           BAZ: *f
           GOO: *f2
           GOG: *f3
        args: [*one, *two]
   foo:
      - from: alpine:latest
      - name: 'foo! Foo! FOO!'
        pack: for_foo
        envile: *common_envile
